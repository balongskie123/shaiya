name: .NET Core Build and Test
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    # Use a Windows runner since you are building a VS solution/C# project
    runs-on: windows-latest 

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      # Installs the correct .NET SDK version (e.g., 8.x)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x' # Use the version your project targets

    - name: Restore NuGet packages
      run: dotnet restore Imgeneus.sln 
      # OR: run: nuget restore Imgeneus.sln if you are using NuGet's setup action

    # ===============================================================
    # Step 4: Build for your custom configuration (e.g., EP8_V1)
    # ===============================================================
    - name: Build EP8_V1 Configuration
      # The /p:Configuration parameter tells MSBuild which configuration to use.
      # You can use the dotnet CLI (recommended for SDK-style projects) or MSBuild.exe
      run: dotnet build Imgeneus.sln --configuration EP8_V1 --no-restore
      # The '--no-restore' flag prevents the build command from running restore again.
      # Replace 'Imgeneus.sln' with your actual solution file name.

    # ===============================================================
    # Step 5 (Optional): Build for another custom configuration
    # ===============================================================
    - name: Build SHAIYA_US Configuration
      # You can repeat the build step for any other custom configuration
      run: dotnet build Imgeneus.sln --configuration SHAIYA_US --no-restore

    # ===============================================================
    # Step 6 (Optional): Publish the artifacts (the built files)
    # ===============================================================
    - name: Publish EP8_V1 Artifacts
      # Replace 'MyProjectName' with the actual name of the project you want to publish
      run: dotnet publish MyProjectName/MyProjectName.csproj --configuration EP8_V1 -o ./publish_ep8_v1
      
    - name: Upload EP8_V1 Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: EP8_V1_build
        path: ./publish_ep8_v1
        
    # Repeat the publish/upload steps for your other configurations as needed.
